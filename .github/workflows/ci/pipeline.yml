name: CI Pipeline

on:
  push:
    branches-ignore:
      - main
      - release
      - release-*
      - release/**
  pull_request:
    branches-ignore:
      - main
      - release
      - release-*
      - release/**

env:
  NODE_VERSION: 16
  PNPM_VERSION: 7

jobs:
  # Step 1: Install Dependencies with Conditional Caching
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up pnpm (Custom Action)
        uses: ./.github/actions/setup-pnpm
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache pnpm Store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

  # Step 2: Type-Check
  type-check:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up pnpm (Custom Action)
        uses: ./.github/actions/setup-pnpm
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Type-Check
        run: bash scripts/ci/type-check.sh

  # Step 3: Lint
  lint:
    runs-on: ubuntu-latest
    needs: type-check
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up pnpm (Custom Action)
        uses: ./.github/actions/setup-pnpm
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Lint Code
        run: bash scripts/ci/lint.sh

  # Step 4: Test
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up pnpm (Custom Action)
        uses: ./.github/actions/setup-pnpm
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Tests
        run: bash scripts/ci/test.sh

  # Step 5: Build
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up pnpm (Custom Action)
        uses: ./.github/actions/setup-pnpm
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Build Application
        run: bash scripts/ci/build.sh
