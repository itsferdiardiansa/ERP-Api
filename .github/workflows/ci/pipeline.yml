name: CI Pipeline

on:
  push:
    branches-ignore:
      - main
      - release
      - release-*
      - release/**
  pull_request:
    branches-ignore:
      - main
      - release
      - release-*
      - release/**

env:
  NODE_VERSION: 16
  PNPM_VERSION: 7
  ACTIONS_STEP_DEBUG: true

jobs:
  install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          path: /

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: npm install -g pnpm@${{ env.PNPM_VERSION }}
        
      - name: Install Dependencies
        run: pnpm install

      - name: Verify pnpm-lock.yaml Existence
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            echo "Error: pnpm-lock.yaml not found in root directory."
            exit 1
          else
            echo "pnpm-lock.yaml found."
          fi

      - name: Cache pnpm Store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
        env:
          GITHUB_ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true

  type-check:
    runs-on: ubuntu-latest
    needs: install
    env:
      PNPM_HOME: "/root/.pnpm"
      PATH: "/root/.pnpm:$PATH"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: pnpm install

      - name: Configure PNPM global bin
        run: |
          mkdir -p "$PNPM_HOME"
          pnpm config set global-bin-dir "$PNPM_HOME"
          echo "PNPM_HOME is set to $PNPM_HOME"
          echo "PATH is set to $PATH"

      - name: Install TypeScript
        run: pnpm add -g typescript

      - name: Type-Check
        run: bash scripts/ci/type-check.sh

  lint:
    runs-on: ubuntu-latest
    needs: type-check
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: |
          npm install -g pnpm@${{ env.PNPM_VERSION }}

      - name: Lint Code
        run: bash scripts/ci/lint.sh

  test:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: |
          npm install -g pnpm@${{ env.PNPM_VERSION }}

      - name: Install Dependencies
        run: pnpm install

      - name: Run Tests
        run: bash scripts/ci/test.sh

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: |
          npm install -g pnpm@${{ env.PNPM_VERSION }}

      - name: Build Application
        run: bash scripts/ci/build.sh
